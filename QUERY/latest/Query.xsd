<?xml version="1.0" encoding="utf-8"?>
<!-- Definition of the openEHR RESULT_SET class returned from a Query -->
<!-- 2017.08.31 - Update based on agreement at SPEC meeting in Alkmaar, initally for REST API -->
<!-- Authored by bna@dips.no  -->
<!-- Status: Draft --> 
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.openehr.org/v1" targetNamespace="http://schemas.openehr.org/v1" elementFormDefault="qualified" version="v1.0.0" id="Query.xsd">
	<xs:element name="result_set" type="QUERY_RESPONSE">
		<xs:annotation>
			<xs:documentation>The root element defining a response from an openEHR Server</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="query_request" type="QUERY_REQUEST">
		<xs:annotation>
			<xs:documentation>The root element defining a query request to an openEHR Server</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ROWS">
		<xs:annotation>
			<xs:documentation>Container for the rows in the resultset</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="row" type="ROW" form="qualified" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ROW">
		<xs:annotation>
			<xs:documentation>Definition of one row. Number of columns should be equal to the number of columns in COLUMNS</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="COLUMNS">
		<xs:annotation>
			<xs:documentation>Metadata definition of the content of the query result.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="xs:string" form="qualified" minOccurs="0"/>
			<xs:element name="path" type="xs:string" form="qualified" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="QUERY_REQUEST">
		<xs:annotation>
			<xs:documentation>Class defining the content of a query request to an openEHR Server</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="aql" type="xs:string">
				<xs:annotation>
					<xs:documentation>The query to execute</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="composition_uids" minOccurs="0">
				<xs:annotation>
					<xs:documentation>optional list of composition uids to filter the query on</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="composition_uid" type="xs:string" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ehr_ids" minOccurs="0">
				<xs:annotation>
					<xs:documentation>optional list of composition uids to filter the query on</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ehr_id" type="xs:string" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!-- TAG not supported in v1 -->
			<!--
			<xs:element name="tagScope" type="TAG_SCOPE" minOccurs="0" maxOccurs="1"/>
			-->
			<!-- PARTITION BY not supported in v1 -->
			<!--
			<xs:element name="partionedBy" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="tag" type="xs:string"/>
						<xs:element name="limit" type="xs:int" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			-->
			<!-- CORRELATION ID not supported in v1 -->
			<!--
			<xs:element name="correlationId" type="xs:string" minOccurs="0" maxOccurs="1"/>
			-->
			<xs:element name="aql_parameters" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="aql_parameter" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:anySimpleType">
										<xs:attribute name="name"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="QUERY_RESPONSE">
		<xs:annotation>
			<xs:documentation>Class defining the structure of a query response from an openEHR Server</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="meta" type="RESPONSE_METADATA" minOccurs="0" maxOccurs="1"/>
			<xs:element name="name" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Name of a query when registered as a stored query</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="aql" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The AQL which was given in the request</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="columns" type="COLUMNS"/>
			<xs:element name="rows" type="ROWS"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RESPONSE_METADATA">
		<xs:annotation>
			<xs:documentation>This is the complete response in Marand EhrScape</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="href" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>URL of the query executed (only for GET endpoint)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="executed_query" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The actual query (i.e. AQL) that was executed by the server after exploding the parameters. This attribute is not mandatory, but is useful for debugging</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="type" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>Defines type of the serialized object</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="schema_version" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>The version of the specification defining the serialized object</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="created" type="xs:dateTime" use="optional">
			<xs:annotation>
				<xs:documentation>Result creation timestamp (in full ISO8601 format)</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="generator" type="xs:dateTime" use="optional">
			<xs:annotation>
				<xs:documentation>Some identifier of the application that generated the result. Useful i.e. for debugging</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<!-- TAGS are not included in v1 -->
	<!-->
	<xs:complexType name="TAGS">
		<xs:sequence>
			<xs:element name="tag" type="TAG"/>
		</xs:sequence></xs:complexType>
		-->
	<!-- TAG is not included in v1 -->
	<!--
	<xs:complexType name="TAG"><xs:sequence><xs:element name="row" type="xs:int"/><xs:element name="col" type="xs:int"/><xs:element name="name" type="xs:string"/><xs:element name="value" type="xs:string"/></xs:sequence></xs:complexType>
	-->
	<!-- TAG_SCOPE is not supported in v1 -->
	<!--
	<xs:complexType name="TAG_SCOPE"><xs:sequence><xs:element name="tags" maxOccurs="unbounded"><xs:complexType><xs:sequence><xs:element name="values" type="xs:string" maxOccurs="unbounded"/><xs:element name="tag" type="xs:string"/></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType>
	-->
</xs:schema>
